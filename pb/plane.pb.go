// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.22.4
// source: plane.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlaneStatus int32

const (
	PlaneStatus_STS_UNSPECIFIED PlaneStatus = 0
	PlaneStatus_STS_CLEANING    PlaneStatus = 1
	PlaneStatus_STS_MAINTAIN    PlaneStatus = 2
	PlaneStatus_STS_READY       PlaneStatus = 3
)

// Enum value maps for PlaneStatus.
var (
	PlaneStatus_name = map[int32]string{
		0: "STS_UNSPECIFIED",
		1: "STS_CLEANING",
		2: "STS_MAINTAIN",
		3: "STS_READY",
	}
	PlaneStatus_value = map[string]int32{
		"STS_UNSPECIFIED": 0,
		"STS_CLEANING":    1,
		"STS_MAINTAIN":    2,
		"STS_READY":       3,
	}
)

func (x PlaneStatus) Enum() *PlaneStatus {
	p := new(PlaneStatus)
	*p = x
	return p
}

func (x PlaneStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PlaneStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_plane_proto_enumTypes[0].Descriptor()
}

func (PlaneStatus) Type() protoreflect.EnumType {
	return &file_plane_proto_enumTypes[0]
}

func (x PlaneStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PlaneStatus.Descriptor instead.
func (PlaneStatus) EnumDescriptor() ([]byte, []int) {
	return file_plane_proto_rawDescGZIP(), []int{0}
}

type PlaneInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type      string      `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	TotalSeat int32       `protobuf:"varint,3,opt,name=total_seat,json=totalSeat,proto3" json:"total_seat,omitempty"`
	Status    PlaneStatus `protobuf:"varint,4,opt,name=status,proto3,enum=proto.PlaneStatus" json:"status,omitempty"`
}

func (x *PlaneInfo) Reset() {
	*x = PlaneInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plane_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaneInfo) ProtoMessage() {}

func (x *PlaneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_plane_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaneInfo.ProtoReflect.Descriptor instead.
func (*PlaneInfo) Descriptor() ([]byte, []int) {
	return file_plane_proto_rawDescGZIP(), []int{0}
}

func (x *PlaneInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PlaneInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PlaneInfo) GetTotalSeat() int32 {
	if x != nil {
		return x.TotalSeat
	}
	return 0
}

func (x *PlaneInfo) GetStatus() PlaneStatus {
	if x != nil {
		return x.Status
	}
	return PlaneStatus_STS_UNSPECIFIED
}

type FindPlaneByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FindPlaneByIdRequest) Reset() {
	*x = FindPlaneByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plane_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindPlaneByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindPlaneByIdRequest) ProtoMessage() {}

func (x *FindPlaneByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plane_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindPlaneByIdRequest.ProtoReflect.Descriptor instead.
func (*FindPlaneByIdRequest) Descriptor() ([]byte, []int) {
	return file_plane_proto_rawDescGZIP(), []int{1}
}

func (x *FindPlaneByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeletePlaneByIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeletePlaneByIdRequest) Reset() {
	*x = DeletePlaneByIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_plane_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePlaneByIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePlaneByIdRequest) ProtoMessage() {}

func (x *DeletePlaneByIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plane_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePlaneByIdRequest.ProtoReflect.Descriptor instead.
func (*DeletePlaneByIdRequest) Descriptor() ([]byte, []int) {
	return file_plane_proto_rawDescGZIP(), []int{2}
}

func (x *DeletePlaneByIdRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_plane_proto protoreflect.FileDescriptor

var file_plane_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x7a, 0x0a, 0x09, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x65, 0x61,
	0x74, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x26, 0x0a,
	0x14, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x6c, 0x61, 0x6e, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x2a,
	0x55, 0x0a, 0x0b, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13,
	0x0a, 0x0f, 0x53, 0x54, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x53, 0x5f, 0x43, 0x4c, 0x45, 0x41, 0x4e,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x53, 0x5f, 0x4d, 0x41, 0x49,
	0x4e, 0x54, 0x41, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x54, 0x53, 0x5f, 0x52,
	0x45, 0x41, 0x44, 0x59, 0x10, 0x03, 0x32, 0xba, 0x02, 0x0a, 0x0c, 0x50, 0x6c, 0x61, 0x6e, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50,
	0x6c, 0x61, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0b,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x10, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x10, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22,
	0x00, 0x12, 0x3a, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x73, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x6c, 0x61, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x30, 0x01, 0x12, 0x3c, 0x0a,
	0x09, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x50, 0x6c, 0x61, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x6e, 0x65, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_plane_proto_rawDescOnce sync.Once
	file_plane_proto_rawDescData = file_plane_proto_rawDesc
)

func file_plane_proto_rawDescGZIP() []byte {
	file_plane_proto_rawDescOnce.Do(func() {
		file_plane_proto_rawDescData = protoimpl.X.CompressGZIP(file_plane_proto_rawDescData)
	})
	return file_plane_proto_rawDescData
}

var file_plane_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_plane_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_plane_proto_goTypes = []interface{}{
	(PlaneStatus)(0),               // 0: proto.PlaneStatus
	(*PlaneInfo)(nil),              // 1: proto.PlaneInfo
	(*FindPlaneByIdRequest)(nil),   // 2: proto.FindPlaneByIdRequest
	(*DeletePlaneByIdRequest)(nil), // 3: proto.DeletePlaneByIdRequest
	(*emptypb.Empty)(nil),          // 4: google.protobuf.Empty
}
var file_plane_proto_depIdxs = []int32{
	0, // 0: proto.PlaneInfo.status:type_name -> proto.PlaneStatus
	1, // 1: proto.PlaneService.CreatePlane:input_type -> proto.PlaneInfo
	1, // 2: proto.PlaneService.UpdatePlane:input_type -> proto.PlaneInfo
	4, // 3: proto.PlaneService.ListPlanes:input_type -> google.protobuf.Empty
	2, // 4: proto.PlaneService.FindPlane:input_type -> proto.FindPlaneByIdRequest
	3, // 5: proto.PlaneService.DeletePlane:input_type -> proto.DeletePlaneByIdRequest
	1, // 6: proto.PlaneService.CreatePlane:output_type -> proto.PlaneInfo
	1, // 7: proto.PlaneService.UpdatePlane:output_type -> proto.PlaneInfo
	1, // 8: proto.PlaneService.ListPlanes:output_type -> proto.PlaneInfo
	1, // 9: proto.PlaneService.FindPlane:output_type -> proto.PlaneInfo
	4, // 10: proto.PlaneService.DeletePlane:output_type -> google.protobuf.Empty
	6, // [6:11] is the sub-list for method output_type
	1, // [1:6] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_plane_proto_init() }
func file_plane_proto_init() {
	if File_plane_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_plane_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaneInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plane_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindPlaneByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_plane_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePlaneByIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_plane_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_plane_proto_goTypes,
		DependencyIndexes: file_plane_proto_depIdxs,
		EnumInfos:         file_plane_proto_enumTypes,
		MessageInfos:      file_plane_proto_msgTypes,
	}.Build()
	File_plane_proto = out.File
	file_plane_proto_rawDesc = nil
	file_plane_proto_goTypes = nil
	file_plane_proto_depIdxs = nil
}
